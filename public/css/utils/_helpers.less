.background-size(@size){
 -webkit-background-size: @size;
 -moz-background-size: @size;
 -o-background-size: @size;
 background-size: @size;
}

.float(@float: left)
{
 display: inline-block;
 float: @float;
}

// give it a CSS property and a rem size
// and it returns the px fallback and the rem
.rem-to-px(@property: 'none', @size: 1)
{
 @prop: ~"@{property}";
 @px: floor(@size * (@root-font-size * 1px));
 @rem: @size * 1rem;
 @{prop}: @px;
 @{prop}: @rem;

}

.rem-to-pix(@property, @size) when (ispercentage(@size))
{
 @prop: ~"@{property}";
 @{prop}: @size;
}

.rem-to-pix(@property, @size) when (isstring(@size))
{
 @prop: ~"@{property}";
 @{prop}: auto;
}

.font-size(@size)
{
 .rem-to-px('font-size', @size);
}

.line-height(@size)
{
 .rem-to-px('line-height', @size);
}

/* ----------------------------------------------
=============== Width / Height   ================
-----------------------------------------------*/

.width(@size) { .rem-to-px(@property: 'width', @size: @size) }
.min-width(@size) { .rem-to-px(@property: 'min-width', @size: @size) }
.max-width(@size) { .rem-to-px(@property: 'max-width', @size: @size) }

.height(@size) { .rem-to-px(@property: 'height', @size: @size) }
.min-height(@size) { .rem-to-px(@property: 'min-height', @size: @size) }
.max-height(@size) { .rem-to-px(@property: 'max-height', @size: @size) }

/* ----------------------------------------------
=============== Padding Mixins   ================
-----------------------------------------------*/

.padding(@top: 0, @right: 0, @bottom: 0, @left: 0)
{

 // all-in-one
 & when (@top > 0) and (@bottom = 0) and (@right = 0) and (@left = 0) {
   .rem-to-px('padding', @top);
 }

 // top and bottoms
 & when (@top > 0) and (@bottom = 0) {
   .rem-to-px('padding-top', @top);
   .rem-to-px('padding-bottom', @top);
 }
 & when (@top > 0) and (@bottom > 0) {
   .rem-to-px('padding-bottom', @top);
   .rem-to-px('padding-bottom', @bottom);
 }

 // right and lefts
 & when (@right > 0) and (@left = 0) {
   .rem-to-px('padding-left', @right);
   .rem-to-px('padding-right', @right);
 }
 & when (@right > 0) and (@left > 0){
   .rem-to-px('padding-left', @left);
   .rem-to-px('padding-right', @right);
 }
}



.padding-top(@p)
{
 .rem-to-px('padding-top', @p);
}

.padding-right(@p)
{
 .rem-to-px('padding-right', @p);
}

.padding-bottom(@p)
{
 .rem-to-px('padding-bottom', @p);
}

.padding-left(@p)
{
 .rem-to-px('padding-left', @p);
}


/* ----------------------------------------------
=============== Margin Mixins ================
-----------------------------------------------*/


.margin(@top: 0, @right: 0, @bottom: 0, @left: 0)
{

 // all-in-one
 & when (@top > 0) and (@bottom = 0) and (@right = 0) and (@left = 0) {
   .rem-to-px('margin', @top);
 }

 // top and bottom
 & when (@top > 0) and (@bottom = 0) {
   .rem-to-px('margin-top', @top);
   .rem-to-px('margin-bottom', @top);
 }
 & when (@top > 0) and (@bottom > 0) {
   .rem-to-px('margin-top', @top);
   .rem-to-px('margin-bottom', @bottom);
 }

 // left and right
 & when (@right > 0) and (@left = 0) {
   .rem-to-px('margin-right', @right);
   .rem-to-px('margin-left', @right);
 }
 & when (@right > 0) and (@left > 0) {
   .rem-to-px('margin-left', @left);
   .rem-to-px('margin-right', @right);
 }
}

.margin-top(@m)
{
 .rem-to-px('margin-top', @m);
}

.margin-right(@m)
{
 .rem-to-px('margin-right', @m);
}

.margin-bottom(@m)
{
 .rem-to-px('margin-bottom', @m);
}

.margin-left(@m)
{
 .rem-to-px('margin-left', @m);
}


.top(@o){.rem-to-px('top', @o);}
.right(@o){.rem-to-px('right', @o);}
.bottom(@o){.rem-to-px(' bottom', @o);}
.left(@o){.rem-to-px('left', @o);}

/* ----------------------------------------------
===============  Flexbox Mixins  ================
-----------------------------------------------*/
.flex-direction(@direction)
{
 -webkit-flex-direction: @direction;
 -moz-flex-direction: @direction;
 -ms-flex-direction: @direction;
 flex-direction: @direction;
}
.display-flex
{
 display: -moz-box;
 display: -webkit-flexbox;
 display: -ms-flexbox;
 display: -webkit-flex;
 display: -moz-flex;
 display: flex;
}

.placeholder(@color:@grey)
{
 ::-webkit-input-placeholder {
  color: @color;
 }

 :-moz-placeholder { /* Firefox 18- */
    color: @color;
 }

 ::-moz-placeholder {  /* Firefox 19+ */
    color: @color;
 }

 :-ms-input-placeholder {
    color: @color;
 }
}
